"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[321],{6845:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>x,frontMatter:()=>i,metadata:()=>l,toc:()=>a});var r=s(4848),c=s(8453),o=s(4443);const i={title:"Cron Service",slug:"/api/Cron",tags:["module","public"],toc_min_heading_level:2,toc_max_heading_level:3},t="Cron",l={id:"api/cron",title:"Cron Service",description:"Current state: Stable",source:"@site/docs/api/cron.mdx",sourceDirName:"api",slug:"/api/Cron",permalink:"/api/Cron",draft:!1,unlisted:!1,editUrl:"https://github.com/strapi/strapi/tree/main/docs/docs/api/cron.mdx",tags:[{label:"module",permalink:"/tags/module"},{label:"public",permalink:"/tags/public"}],version:"current",frontMatter:{title:"Cron Service",slug:"/api/Cron",tags:["module","public"],toc_min_heading_level:2,toc_max_heading_level:3},sidebar:"api",previous:{title:"Container",permalink:"/api/container"},next:{title:"EventHub (WIP)",permalink:"/api/EventHub"}},d={},a=[{value:"Module: Cron Service",id:"module-cron-service",level:2},{value:"createCronService()",id:"createcronservice",level:3},{value:"Methods",id:"methods",level:2},{value:"<code>cron.add(tasks)</code>",id:"cronaddtasks",level:3},{value:"Example",id:"example",level:4},{value:"<code>cron.remove(name)</code>",id:"cronremovename",level:3},{value:"Example",id:"example-1",level:4},{value:"<code>cron.start()</code>",id:"cronstart",level:3},{value:"Example",id:"example-2",level:4},{value:"<code>cron.stop()</code>",id:"cronstop",level:3},{value:"Example",id:"example-3",level:4},{value:"<code>cron.destroy()</code>",id:"crondestroy",level:3},{value:"Example",id:"example-4",level:4},{value:"Properties",id:"properties",level:2},{value:"<code>cron.jobs</code>",id:"cronjobs",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"cron",children:"Cron"}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["Current state: ",(0,r.jsx)(n.strong,{children:"Stable"})]})}),"\n",(0,r.jsx)(n.p,{children:"The Strapi Cron Service provides a way to add, remove, start, and stop cron jobs in a Strapi application."}),"\n",(0,r.jsx)(n.h2,{id:"module-cron-service",children:"Module: Cron Service"}),"\n",(0,r.jsx)(n.h3,{id:"createcronservice",children:"createCronService()"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"createCronService()"})," function returns an object that provides methods to manage cron jobs."]}),"\n",(0,r.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(n.h3,{id:"cronaddtasks",children:(0,r.jsx)(n.code,{children:"cron.add(tasks)"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tasks"}),": ",(0,r.jsx)(o.A,{children:"Object"})]}),"\n",(0,r.jsxs)(n.li,{children:["Returns: ",(0,r.jsx)(n.code,{children:"this"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Adds one or more cron tasks to the service."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Each key of the ",(0,r.jsx)(n.code,{children:"tasks"})," object is the name of the task."]}),"\n",(0,r.jsxs)(n.li,{children:["Each value of the ",(0,r.jsx)(n.code,{children:"tasks"})," object can be either a function, or an object with two properties: ",(0,r.jsx)(n.code,{children:"task"})," and ",(0,r.jsx)(n.code,{children:"options"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["If the value is a function, it is used as the task to be executed when the cron expression is met.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The key will be considered as the cron expression"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["If the value is an object, its ",(0,r.jsx)(n.code,{children:"task"})," property is used as the task function, and its ",(0,r.jsx)(n.code,{children:"options"})," property is used as the cron expression options."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const { createCronService } = require('packages/core/strapi/lib/services/cron.js');\n\nconst cron = createCronService();\n\nconst task = () => {\n  console.log('Task executed!');\n};\n\ncron.add({\n  myTask: {\n    task,\n    options: '*/5 * * * *', // Executes every 5 minutes.\n  },\n  '*/1 * * * *': () => console.log('A minute has passed.'),\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"cronremovename",children:(0,r.jsx)(n.code,{children:"cron.remove(name)"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"name"}),": ",(0,r.jsx)(o.A,{children:"String"})]}),"\n",(0,r.jsxs)(n.li,{children:["Returns: ",(0,r.jsx)(n.code,{children:"this"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Removes a cron task from the service."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The ",(0,r.jsx)(n.code,{children:"name"})," parameter is the name of the task to remove."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"example-1",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const { createCronService } = require('packages/core/strapi/lib/services/cron.js');\n\nconst cron = createCronService();\n\nconst task = () => {\n  console.log('Task executed!');\n};\n\ncron.add({\n  myTask: {\n    task,\n    options: '*/5 * * * *', // Executes every 5 minutes.\n  },\n});\n\ncron.remove('myTask');\n"})}),"\n",(0,r.jsx)(n.h3,{id:"cronstart",children:(0,r.jsx)(n.code,{children:"cron.start()"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Returns: ",(0,r.jsx)(n.code,{children:"this"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Starts the cron service."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Schedules all the cron jobs."}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"example-2",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const { createCronService } = require('packages/core/strapi/lib/services/cron.js');\n\nconst cron = createCronService();\n\nconst task = () => {\n  console.log('Task executed!');\n};\n\ncron.add({\n  myTask: {\n    task,\n    options: '*/5 * * * *', // Executes every 5 minutes.\n  },\n});\n\ncron.start();\n"})}),"\n",(0,r.jsx)(n.h3,{id:"cronstop",children:(0,r.jsx)(n.code,{children:"cron.stop()"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Returns: ",(0,r.jsx)(n.code,{children:"this"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Stops the cron service."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Cancels all the scheduled jobs."}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"example-3",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const { createCronService } = require('packages/core/strapi/lib/services/cron.js');\n\nconst cron = createCronService();\n\nconst task = () => {\n  console.log('Task executed!');\n};\n\ncron.add({\n  myTask: {\n    task,\n    options: '*/5 * * * *', // Executes every 5 minutes.\n  },\n});\n\n// Start the scheduled cron jobs\ncron.start();\n// Stops the cron jobs\ncron.stop();\n"})}),"\n",(0,r.jsx)(n.h3,{id:"crondestroy",children:(0,r.jsx)(n.code,{children:"cron.destroy()"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Returns: ",(0,r.jsx)(n.code,{children:"this"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Destroys the cron service."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Calls the ",(0,r.jsx)(n.code,{children:"stop()"})," method."]}),"\n",(0,r.jsx)(n.li,{children:"Clears the list of cron jobs."}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"example-4",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const { createCronService } = require('packages/core/strapi/lib/services/cron.js');\n\nconst cron = createCronService();\n\nconst task = () => {\n  console.log('Task executed!');\n};\n\ncron.add({\n  myTask: {\n    task,\n    options: '*/5 * * * *', // Executes every 5 minutes.\n  },\n});\n\n// Start the scheduled cron jobs\ncron.start();\n// Stops the cron jobs and remove all scheduled tasks\ncron.destroy();\n"})}),"\n",(0,r.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(n.h3,{id:"cronjobs",children:(0,r.jsx)(n.code,{children:"cron.jobs"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(o.A,{children:"Array"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(o.A,{children:"Object"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"job"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/node-schedule/node-schedule",children:(0,r.jsx)(o.A,{children:"Job"})})," - Job object by node-schedule"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"options"}),": ",(0,r.jsx)(o.A,{children:"String"})," - String representing the recurrence of the job ( like '_/5 _ * * *' )"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"name"}),": ",(0,r.jsx)(o.A,{children:"String"})," - The name of the task associated to the job"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"An array of the cron jobs added to the service."})]})}function x(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},4443:(e,n,s)=>{s.d(n,{A:()=>c});s(6540);var r=s(4848);function c(e){let{children:n}=e;return(0,r.jsxs)("span",{style:{color:"#017501"},children:["<",n,">"]})}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>t});var r=s(6540);const c={},o=r.createContext(c);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);