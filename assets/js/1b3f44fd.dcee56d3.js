"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6287],{4567:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var r=t(4848),n=t(8453);const a={title:"Websocket",tags:["providers","data-transfer","experimental"]},i="Remote Provider Websocket",o={id:"docs/core/data-transfer/providers/remote-strapi/websocket",title:"Websocket",description:"When the data transfer feature is enabled for a Strapi server (an admin.transfer.token.salt config value has been set and STRAPIDISABLEREMOTEDATATRANSFER is not set to true), Strapi will create websocket servers available on the routes /admin/transfer/runner/pull and /admin/transfer/runner/push.",source:"@site/docs/docs/01-core/data-transfer/02-providers/05-remote-strapi/01-websocket.md",sourceDirName:"docs/01-core/data-transfer/02-providers/05-remote-strapi",slug:"/docs/core/data-transfer/providers/remote-strapi/websocket",permalink:"/docs/core/data-transfer/providers/remote-strapi/websocket",draft:!1,unlisted:!1,editUrl:"https://github.com/strapi/strapi/tree/main/docs/docs/docs/01-core/data-transfer/02-providers/05-remote-strapi/01-websocket.md",tags:[{label:"providers",permalink:"/tags/providers"},{label:"data-transfer",permalink:"/tags/data-transfer"},{label:"experimental",permalink:"/tags/experimental"}],version:"current",sidebarPosition:1,frontMatter:{title:"Websocket",tags:["providers","data-transfer","experimental"]},sidebar:"docs",previous:{title:"Overview",permalink:"/docs/core/data-transfer/providers/remote-strapi/overview"},next:{title:"Source",permalink:"/docs/core/data-transfer/providers/remote-strapi/source"}},c={},d=[{value:"Websocket Messages / Dispatcher",id:"websocket-messages--dispatcher",level:2},{value:"dispatchCommand",id:"dispatchcommand",level:3},{value:"dispatchTransferStep",id:"dispatchtransferstep",level:3},{value:"dispatchTransferAction",id:"dispatchtransferaction",level:3},{value:"Message Timeouts and Retries",id:"message-timeouts-and-retries",level:2}];function l(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h1,{id:"remote-provider-websocket",children:"Remote Provider Websocket"}),"\n",(0,r.jsxs)(s.p,{children:["When the data transfer feature is enabled for a Strapi server (an ",(0,r.jsx)(s.code,{children:"admin.transfer.token.salt"})," config value has been set and ",(0,r.jsx)(s.code,{children:"STRAPI_DISABLE_REMOTE_DATA_TRANSFER"})," is not set to true), Strapi will create websocket servers available on the routes ",(0,r.jsx)(s.code,{children:"/admin/transfer/runner/pull"})," and ",(0,r.jsx)(s.code,{children:"/admin/transfer/runner/push"}),"."]}),"\n",(0,r.jsx)(s.p,{children:"Opening a websocket connection on those routes requires a valid transfer token as a bearer token in the Authorization header."}),"\n",(0,r.jsxs)(s.p,{children:["Please see the ",(0,r.jsx)(s.code,{children:"bootstrap()"})," method of the remote providers for an example of how to make the initial connection to the Strapi websocket."]}),"\n",(0,r.jsx)(s.h2,{id:"websocket-messages--dispatcher",children:"Websocket Messages / Dispatcher"}),"\n",(0,r.jsx)(s.p,{children:"The remote websocket server only accepts specific websocket messages which we call transfer commands. These commands must also be sent in a specific order, and an error messages will be returned if an unexpected message is received by the server."}),"\n",(0,r.jsxs)(s.p,{children:["A message dispatcher object should be created to send messages to the server. See ",(0,r.jsx)(s.code,{children:"packages/core/data-transfer/src/strapi/providers/utils.ts"})," for more inofrmation on the dispatcher."]}),"\n",(0,r.jsx)(s.p,{children:"The dispatcher includes"}),"\n",(0,r.jsx)(s.h3,{id:"dispatchcommand",children:"dispatchCommand"}),"\n",(0,r.jsx)(s.p,{children:'Accepts "commands" used for opening and closing a transfer.'}),"\n",(0,r.jsxs)(s.p,{children:["Allows the following ",(0,r.jsx)(s.code,{children:"command"})," values:"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"init"}),": for initializing a connection. Returns a transferID that must be sent with all future messages in this transfer"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"end"}),": for ending a connection"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"dispatchtransferstep",children:"dispatchTransferStep"}),"\n",(0,r.jsx)(s.p,{children:"Used for switching between stages of a transfer and streaming the actual data of a transfer."}),"\n",(0,r.jsxs)(s.p,{children:["Accepts the following ",(0,r.jsx)(s.code,{children:"action"})," values:"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"start"}),": sent with a ",(0,r.jsx)(s.code,{children:"step"})," value for the name of the step/stage","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["any number of ",(0,r.jsx)(s.code,{children:"stream"}),": sent with a ",(0,r.jsx)(s.code,{children:"step"})," value and the ",(0,r.jsx)(s.code,{children:"data"})," being sent (ie, an array of entities)"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"end"}),": sent with a ",(0,r.jsx)(s.code,{children:"step"})," value for the step being ended"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"dispatchtransferaction",children:"dispatchTransferAction"}),"\n",(0,r.jsx)(s.p,{children:"Used for triggering 'actions' on the server equivalent to the local providers."}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"bootstrap"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"getMetadata"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"beforeTransfer"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"getSchemas"})}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"rollback"})," (destination only)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"close"}),": for completing a transfer (but doesn't close the connection)"]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["See ",(0,r.jsx)(s.code,{children:"packages/core/data-transfer/dist/strapi/remote/handlers/push.d.ts"})," and ",(0,r.jsx)(s.code,{children:"packages/core/data-transfer/dist/strapi/remote/handlers/push.d.ts"})," for complete and precise definitions of the messages that must be sent."]}),"\n",(0,r.jsx)(s.h2,{id:"message-timeouts-and-retries",children:"Message Timeouts and Retries"}),"\n",(0,r.jsxs)(s.p,{children:["Because the transfer relies on a message->response protocol, if the websocket server is unable to send a reply, for example due to network instability, the connection would halt. For this reason, each provider's options includes ",(0,r.jsx)(s.code,{children:"retryMessageOptions"})," which attempt to resend a message after a given timeout is reached and a max retry option to abort the transfer after a given number of failed retry attempts."]})]})}function h(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>o});var r=t(6540);const n={},a=r.createContext(n);function i(e){const s=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),r.createElement(a.Provider,{value:s},e.children)}}}]);