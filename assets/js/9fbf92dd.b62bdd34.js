"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1871],{5528:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var r=t(4848),i=t(8453),s=t(4443);const o={title:"Container",slug:"/api/container",tags:["module","public"],toc_min_heading_level:2,toc_max_heading_level:5},c="Container",a={id:"api/container",title:"Container",description:"Current state: Stable",source:"@site/docs/api/container.mdx",sourceDirName:"api",slug:"/api/container",permalink:"/api/container",draft:!1,unlisted:!1,editUrl:"https://github.com/strapi/strapi/tree/main/docs/docs/api/container.mdx",tags:[{label:"module",permalink:"/tags/module"},{label:"public",permalink:"/tags/public"}],version:"current",frontMatter:{title:"Container",slug:"/api/container",tags:["module","public"],toc_min_heading_level:2,toc_max_heading_level:5},sidebar:"api",previous:{title:"API (WIP)",permalink:"/api/API"},next:{title:"Cron Service",permalink:"/api/Cron"}},l={},d=[{value:"Module: container",id:"module-container",level:2},{value:"<code>createContainer(strapi)</code>",id:"createcontainerstrapi",level:3},{value:"<code>container.register(name, resolver)</code>",id:"containerregistername-resolver",level:3},{value:"<code>container.get(name, args)</code>",id:"containergetname-args",level:3},{value:"<code>container.extend()</code>",id:"containerextend",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"container",children:"Container"}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["Current state: ",(0,r.jsx)(n.strong,{children:"Stable"})]})}),"\n",(0,r.jsx)(n.p,{children:"The container module permits to generate containers."}),"\n",(0,r.jsx)(n.h2,{id:"module-container",children:"Module: container"}),"\n",(0,r.jsx)(n.h3,{id:"createcontainerstrapi",children:(0,r.jsx)(n.code,{children:"createContainer(strapi)"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"strapi"}),": ",(0,r.jsx)(s.A,{children:"Strapi"})," ",(0,r.jsx)(n.a,{href:"strapi.mdx",children:"See Strapi class documentation"})]}),"\n",(0,r.jsxs)(n.li,{children:["Returns: ",(0,r.jsx)(s.A,{children:"Container"})]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const container = createContainer(strapi);\n\ncontainer.register('config', {\n  get: (configName) => {},\n  set: (configName, value) => {},\n});\n\nconst dbConfig = container.get('config').get('database');\n"})}),"\n",(0,r.jsx)(n.h3,{id:"containerregistername-resolver",children:(0,r.jsx)(n.code,{children:"container.register(name, resolver)"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"name"}),": ",(0,r.jsx)(s.A,{children:"String"})," UID of the content"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"resolver"}),": ",(0,r.jsx)(s.A,{children:"Function"})," | ",(0,r.jsx)(s.A,{children:"Any"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"As a function, the function will be executed when the first get method is called on this content. The result of this function will define the content of this UID."}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"resolver(context, args)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"context"}),": ",(0,r.jsx)(s.A,{children:"Strapi"})," ",(0,r.jsx)(n.a,{href:"strapi.mdx",children:"See Strapi class documentation"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"args"}),": ",(0,r.jsx)(s.A,{children:"Any"})," Anything to be used by the resolver function"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"As anything else, this value will be resolved when getting this specified content through its UID."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Register a new content to be accessed inside the container. If the name is already used, it will throw an error."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const container = createContainer(strapi);\n\ncontainer.register('config', ({ strapi }, args) => {});\n// or\ncontainer.register('services', {});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"containergetname-args",children:(0,r.jsx)(n.code,{children:"container.get(name, args)"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"name"}),": ",(0,r.jsx)(s.A,{children:"String"})," UID of the content"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"args"}),": ",(0,r.jsx)(s.A,{children:"Any"})," Value that will be passed to the resolver (if function)"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Get the value stored for a specific ",(0,r.jsx)(n.code,{children:"name"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const container = createContainer(strapi);\n\ncontainer.register('config', { db: 'sqlite' });\n\nconst config = container.get('config');\n// config.db === 'sqlite'\n"})}),"\n",(0,r.jsxs)(n.p,{children:["\u26a0\ufe0f If the ",(0,r.jsx)(n.strong,{children:"resolver"}),", used in the ",(0,r.jsx)(n.a,{href:"#containerregistername-resolver",children:"register function"}),", is a ",(0,r.jsx)(n.strong,{children:"function"}),", the value will be the result of this resolver function with ",(0,r.jsx)(n.code,{children:"args"})," as parameter on the first call to ",(0,r.jsx)(n.code,{children:"get"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Please pay attention that the resolver result value isn't awaited. So if resolver returns a promise, the value stored will be a promise."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const container = createContainer(strapi);\n\ncontainer.register('boolean', (bool) => bool);\n\n// First call - The value is resolved through the resolver above \"(bool) => bool\"\ncontainer.get('boolean', true);\n// true\n\n// Any further call will use the previously set value\ncontainer.get('boolean');\n// true\n\n// Even if we try to push a new value\ncontainer.get('boolean', false);\n// true\n"})}),"\n",(0,r.jsx)(n.h3,{id:"containerextend",children:(0,r.jsx)(n.code,{children:"container.extend()"})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsx)(n.p,{children:"To be developed"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},4443:(e,n,t)=>{t.d(n,{A:()=>i});t(6540);var r=t(4848);function i(e){let{children:n}=e;return(0,r.jsxs)("span",{style:{color:"#017501"},children:["<",n,">"]})}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var r=t(6540);const i={},s=r.createContext(i);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);