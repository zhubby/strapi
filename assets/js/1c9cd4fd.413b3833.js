"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4973],{5326:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var n=t(4848),r=t(8453);const s={title:"useCollator",description:"API reference for the useCollator hook in Strapi",tags:["hooks","helper-plugin","i18n"]},l=void 0,i={id:"docs/core/helper-plugin/hooks/use-collator",title:"useCollator",description:"API reference for the useCollator hook in Strapi",source:"@site/docs/docs/01-core/helper-plugin/hooks/use-collator.mdx",sourceDirName:"docs/01-core/helper-plugin/hooks",slug:"/docs/core/helper-plugin/hooks/use-collator",permalink:"/docs/core/helper-plugin/hooks/use-collator",draft:!1,unlisted:!1,editUrl:"https://github.com/strapi/strapi/tree/main/docs/docs/docs/01-core/helper-plugin/hooks/use-collator.mdx",tags:[{label:"hooks",permalink:"/tags/hooks"},{label:"helper-plugin",permalink:"/tags/helper-plugin"},{label:"i18n",permalink:"/tags/i-18-n"}],version:"current",frontMatter:{title:"useCollator",description:"API reference for the useCollator hook in Strapi",tags:["hooks","helper-plugin","i18n"]},sidebar:"docs",previous:{title:"useClipboard",permalink:"/docs/core/helper-plugin/hooks/use-clipboard"},next:{title:"useFetchClient",permalink:"/docs/core/helper-plugin/hooks/use-fetch-client"}},a={},c=[{value:"Usage",id:"usage",level:2},{value:"Typescript",id:"typescript",level:2}];function p(e){const o={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(o.p,{children:["A custom hook that returns the ",(0,n.jsx)(o.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Collator",children:(0,n.jsx)(o.code,{children:"Intl.Collator"})})," native API.\nUseful for searching & sorting strings that are localised. The implementation method has a unique cache store to avoid creating a new instance of the\n",(0,n.jsx)(o.code,{children:"Intl.Collator"})," for each call of the hook depending on the locale and options provided."]}),"\n",(0,n.jsxs)(o.p,{children:["Borrowed from ",(0,n.jsx)(o.a,{href:"https://github.com/adobe/react-spectrum/blob/main/packages/%40react-aria/i18n/src/useCollator.ts",children:(0,n.jsx)(o.code,{children:"react-aria"})}),"."]}),"\n",(0,n.jsx)(o.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-js",children:"import { useIntl } from 'react-intl';\nimport { useCollator } from '@strapi/helper-plugin';\n\nconst MyComponent = () => {\n  const { locale } = useIntl();\n  const fruits = ['banana', 'apple', 'orange', 'kiwi'];\n\n  const formatter = useCollator(locale, { sensitivity: 'base' });\n\n  /**\n   * This would render the list of fruits in the following order:\n   * apple\n   * banana\n   * kiwi\n   * orange\n   */\n  return (\n    <div>\n      {fruits.sort(formatter.compare).map((fruit) => (\n        <h2 key={fruit}>{fruit}</h2>\n      ))}\n    </div>\n  );\n};\n"})}),"\n",(0,n.jsx)(o.h2,{id:"typescript",children:"Typescript"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-ts",children:"function useCollator(locale: string, options?: Intl.CollatorOptions): Intl.Collator;\n"})})]})}function u(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},8453:(e,o,t)=>{t.d(o,{R:()=>l,x:()=>i});var n=t(6540);const r={},s=n.createContext(r);function l(e){const o=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function i(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),n.createElement(s.Provider,{value:o},e.children)}}}]);