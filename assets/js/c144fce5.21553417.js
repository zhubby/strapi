"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4856],{1713:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var n=t(4848),i=t(8453);const o={title:"Review Workflows",slug:"/settings/review-workflows",description:"Guide for review workflows in settings.",tags:["settings","review-workflows"]},a=void 0,r={id:"docs/core/admin/settings/review-workflows",title:"Review Workflows",description:"Guide for review workflows in settings.",source:"@site/docs/docs/01-core/admin/03-settings/01-review-workflows.mdx",sourceDirName:"docs/01-core/admin/03-settings",slug:"/settings/review-workflows",permalink:"/settings/review-workflows",draft:!1,unlisted:!1,editUrl:"https://github.com/strapi/strapi/tree/main/docs/docs/docs/01-core/admin/03-settings/01-review-workflows.mdx",tags:[{label:"settings",permalink:"/tags/settings"},{label:"review-workflows",permalink:"/tags/review-workflows"}],version:"current",sidebarPosition:1,frontMatter:{title:"Review Workflows",slug:"/settings/review-workflows",description:"Guide for review workflows in settings.",tags:["settings","review-workflows"]},sidebar:"docs",previous:{title:"Introduction",permalink:"/settings/intro"},next:{title:"Overview",permalink:"/docs/core/admin/commands/overview"}},l={},d=[{value:"Summary",id:"summary",level:2},{value:"License limits",id:"license-limits",level:3},{value:"List view",id:"list-view",level:3},{value:"License limits",id:"license-limits-1",level:4},{value:"Edit &amp; Create views",id:"edit--create-views",level:3},{value:"Form submission",id:"form-submission",level:4},{value:"Edit view",id:"edit-view",level:3},{value:"Deletion of a stage",id:"deletion-of-a-stage",level:4},{value:"Create view",id:"create-view",level:4},{value:"Hooks",id:"hooks",level:3},{value:"<code>useReviewWorkflows(queryParams)</code>",id:"usereviewworkflowsqueryparams",level:4},{value:"<code>useReviewWorkflowsStages({ id, layout }, reactQueryOptions)</code>",id:"usereviewworkflowsstages-id-layout--reactqueryoptions",level:4},{value:"Data shapes",id:"data-shapes",level:3},{value:"Endpoints",id:"endpoints",level:3}];function c(e){const s={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h2,{id:"summary",children:"Summary"}),"\n",(0,n.jsxs)(s.p,{children:["There are 3 views available to manage workflows and stages: List, Edit and Create. These pages are only ",(0,n.jsx)(s.strong,{children:"accessible in enterprise mode"})," and\nif the user has the permission ",(0,n.jsx)(s.code,{children:"admin::review-workflows.read"}),"."]}),"\n",(0,n.jsxs)(s.p,{children:["Upon mount the settings pages injects themselves into the global redux store under the namespace ",(0,n.jsx)(s.code,{children:"settings_review-workflows"}),". Redux is\nthen used for all state management updates. ",(0,n.jsx)(s.code,{children:"Formik"})," is used to render and validate the edit and create views. It\nis integrated with redux, so that all input components are controlled components."]}),"\n",(0,n.jsx)(s.h3,{id:"license-limits",children:"License limits"}),"\n",(0,n.jsxs)(s.p,{children:["Most licenses have feature-based usage limits configured through Chargebee. These limits are exposed to the frontend through ",(0,n.jsx)(s.a,{href:"/docs/core/admin/ee/hooks/use-license-limits",children:(0,n.jsx)(s.code,{children:"useLicenseLimits"})}),".\nOffline licenses do not have these limits and therefore the endpoint does not return any. For offline licenses hard-coded limits apply: max. 200 workflows, max. 200 stages per workflow."]}),"\n",(0,n.jsx)(s.p,{children:"The frontend aswell as the admin API restrict actions on the settings pages in various ways (more below), if the license limits are about to exceed or already exceeded."}),"\n",(0,n.jsx)(s.h3,{id:"list-view",children:"List view"}),"\n",(0,n.jsx)(s.p,{children:"The list-view displays all available workflows."}),"\n",(0,n.jsx)(s.h4,{id:"license-limits-1",children:"License limits"}),"\n",(0,n.jsx)(s.p,{children:"Displays a modal in case the user is at or above the license limit on page load. In case a user attempts to create a new workflow the same modal is shown again, in case that creation\nwould exceed the limit."}),"\n",(0,n.jsx)(s.h3,{id:"edit--create-views",children:"Edit & Create views"}),"\n",(0,n.jsx)(s.p,{children:"The edit and create views allow workflows and stages to be edited (existing ones) and new workflows to be created. To enable a review-workflow on a content-type users select\nfrom a list of all content-types (collections aswell as single-types) for each workflow. In case a content-type is already assigned to another content-type, the content-type\nwill be re-assigned to the new workflow."}),"\n",(0,n.jsx)(s.p,{children:"Stages always have a color assigned to them. Colors are stored as hex-codes in the database, to avoid coupling with the design-system and developers to know about possible color-names. The\nadmin app renders the color badges for a stage based in the matching theme-color and in case it doesn't find any the stored hex-code. It was not possible to normalize the hex-codes\nto be uppercase everywhere (e.g. if they are created via lifecycle methods), so the frontend does the normalization."}),"\n",(0,n.jsx)(s.h4,{id:"form-submission",children:"Form submission"}),"\n",(0,n.jsxs)(s.p,{children:["The form wrapping boths views submits all stages at once, because we expect the number of stages per workflow to be\nrather small. Because of this we can simply re-order stages by sending them in a different order. Every stage that sends a corresponding ",(0,n.jsx)(s.code,{children:"id"}),"\nattribute will be re-ordered and not created."]}),"\n",(0,n.jsxs)(s.p,{children:["Stages without an ",(0,n.jsx)(s.code,{children:"id"})," property will be created in the database on submission. Stages that existed already, but are not submitted again will be deleted on submission."]}),"\n",(0,n.jsxs)(s.p,{children:["When editing a workflow and the ",(0,n.jsx)(s.code,{children:"permissions"})," of a stage have not been modified by a user, they are sent as ",(0,n.jsx)(s.code,{children:"undefined"}),". This special case allows users to edit a workflow without having to have\npermissions to read ",(0,n.jsx)(s.code,{children:"roles"}),", because the API won't update anything in the database."]}),"\n",(0,n.jsx)(s.p,{children:"Users without read permissions for roles are able to create workflows, but they will not be able to define which roles can change a stage, so that stages of that workflow can only be changed\nby the super-admin unless the roles are set."}),"\n",(0,n.jsx)(s.h3,{id:"edit-view",children:"Edit view"}),"\n",(0,n.jsx)(s.p,{children:"Displays a license-limits modal in case the user is above the license limit on page load and upon form submission."}),"\n",(0,n.jsx)(s.h4,{id:"deletion-of-a-stage",children:"Deletion of a stage"}),"\n",(0,n.jsxs)(s.p,{children:["If a stage is deleted, all ",(0,n.jsx)(s.strong,{children:"entities which are connected to that stage are moved to the previous stage"}),". Because a stage deletion\nmight have big effects on the database, a confirmation is shown before users save changes."]}),"\n",(0,n.jsx)(s.p,{children:'Changes are only applied once the user clicks "Save". It is not possible to remove all stages from a workflow (neither in the UI nor the API).'}),"\n",(0,n.jsx)(s.h4,{id:"create-view",children:"Create view"}),"\n",(0,n.jsx)(s.p,{children:"Displays a license-limit modal in case the user is at or above the license limit on page load and upon form submission."}),"\n",(0,n.jsx)(s.h3,{id:"hooks",children:"Hooks"}),"\n",(0,n.jsx)(s.h4,{id:"usereviewworkflowsqueryparams",children:(0,n.jsx)(s.code,{children:"useReviewWorkflows(queryParams)"})}),"\n",(0,n.jsxs)(s.p,{children:["This hook allows to fetch either one (if ",(0,n.jsx)(s.code,{children:"params"})," contains an ",(0,n.jsx)(s.code,{children:"id"}),") or all workflows. By default stages are populated. The\nhooks returns a partial react-query result."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",children:"useReviewWorkflows(queryParams: object): {\n  meta: { workflowCount: number }\n  workflows: Workflow[],\n  isLoading: boolean,\n  status: string,\n  refetch: () => Promise<void>,\n}\n"})}),"\n",(0,n.jsx)(s.h4,{id:"usereviewworkflowsstages-id-layout--reactqueryoptions",children:(0,n.jsx)(s.code,{children:"useReviewWorkflowsStages({ id, layout }, reactQueryOptions)"})}),"\n",(0,n.jsx)(s.p,{children:"This hook allows to fetch stages for a given workflow, that a user has permissions to transition to."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",children:"type ContentTypeLayout {\n  uid: string;\n  kind: 'collectionType' | 'singleType';\n}\n\nuseReviewWorkflowsStages({ id: number, layout: ContentTypeLayout }, reactQueryOptions): {\n  meta: { workflowCount: number, stagesCount: number }\n  stages: Stage[],\n  isLoading: boolean,\n  refetch: () => Promise<void>,\n}\n"})}),"\n",(0,n.jsx)(s.h3,{id:"data-shapes",children:"Data shapes"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",children:"type Stage {\n    id: number;\n    color: string; // hex code\n    name: string; // max-length: 255 characters\n    permissions: Permission[];\n    createdAt: Date;\n    updatedAt: Date;\n}\n\ntype Workflow {\n    id: number;\n    name: string; // max-length: 255 characters, unique\n    contentTypes: number[];\n    stages: Stage[];\n    createdAt: Date;\n    updatedAt: Date;\n}\n"})}),"\n",(0,n.jsx)(s.h3,{id:"endpoints",children:"Endpoints"}),"\n",(0,n.jsxs)(s.p,{children:["For a list of all available endpoints please refer to the ",(0,n.jsx)(s.a,{href:"/docs/core/admin/ee/review-workflows",children:"detailed backend design documentation"}),"."]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>a,x:()=>r});var n=t(6540);const i={},o=n.createContext(i);function a(e){const s=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(o.Provider,{value:s},e.children)}}}]);