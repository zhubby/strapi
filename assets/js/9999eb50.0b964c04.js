"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9565],{4337:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>r,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var t=i(4848),s=i(8453);const a={title:"plugin:init",description:"An in depth look at the plugin:init command of the Strapi CLI",tags:["CLI","commands","plugins","initialization"]},o=void 0,l={id:"docs/core/strapi/commands/plugin/init",title:"plugin:init",description:"An in depth look at the plugin:init command of the Strapi CLI",source:"@site/docs/docs/01-core/strapi/commands/plugin/03-init.md",sourceDirName:"docs/01-core/strapi/commands/plugin",slug:"/docs/core/strapi/commands/plugin/init",permalink:"/docs/core/strapi/commands/plugin/init",draft:!1,unlisted:!1,editUrl:"https://github.com/strapi/strapi/tree/main/docs/docs/docs/01-core/strapi/commands/plugin/03-init.md",tags:[{label:"CLI",permalink:"/tags/cli"},{label:"commands",permalink:"/tags/commands"},{label:"plugins",permalink:"/tags/plugins"},{label:"initialization",permalink:"/tags/initialization"}],version:"current",sidebarPosition:3,frontMatter:{title:"plugin:init",description:"An in depth look at the plugin:init command of the Strapi CLI",tags:["CLI","commands","plugins","initialization"]},sidebar:"docs",previous:{title:"plugin:watch",permalink:"/docs/core/strapi/commands/plugin/watch"},next:{title:"plugin:verify",permalink:"/docs/core/strapi/commands/plugin/check"}},r={},c=[{value:"Usage",id:"usage",level:2},{value:"Options",id:"options",level:3},{value:"How it works",id:"how-it-works",level:2}];function d(n){const e={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:["The ",(0,t.jsx)(e.code,{children:"plugin:init"})," command is used to create a plugin, by default in ",(0,t.jsx)(e.code,{children:"src/plugins"})," \u2013 because this is the strapi CLI we assume we're in a user app by default. This is done by using ",(0,t.jsx)(e.code,{children:"pack-up"})," underneath and a unique template configuration."]}),"\n",(0,t.jsx)(e.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"strapi plugin:init [path]\n"})}),"\n",(0,t.jsx)(e.h3,{id:"options",children:"Options"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"Create a new plugin at a given path.\n\nOptions:\n  -d, --debug  Enable debugging mode with verbose logs (default: false)\n  --silent     Don't log anything (default: false)\n  -h, --help   Display help for command\n"})}),"\n",(0,t.jsx)(e.h2,{id:"how-it-works",children:"How it works"}),"\n",(0,t.jsx)(e.p,{children:"The command sequence can be visualised as follows:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Ask the user a series of questions via prompts"}),"\n",(0,t.jsx)(e.li,{children:"Generate a plugin folder structure based on that template"}),"\n"]})]})}function p(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>o,x:()=>l});var t=i(6540);const s={},a=t.createContext(s);function o(n){const e=t.useContext(a);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:o(n.components),t.createElement(a.Provider,{value:e},n.children)}}}]);