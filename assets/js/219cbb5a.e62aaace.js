"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[894],{3998:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=t(4848),s=t(8453);const i={title:"useFilter",description:"API reference for the useFilter hook in Strapi",tags:["hooks","helper-plugin","i18n"]},o=void 0,l={id:"docs/core/helper-plugin/hooks/use-filter",title:"useFilter",description:"API reference for the useFilter hook in Strapi",source:"@site/docs/docs/01-core/helper-plugin/hooks/use-filter.mdx",sourceDirName:"docs/01-core/helper-plugin/hooks",slug:"/docs/core/helper-plugin/hooks/use-filter",permalink:"/docs/core/helper-plugin/hooks/use-filter",draft:!1,unlisted:!1,editUrl:"https://github.com/strapi/strapi/tree/main/docs/docs/docs/01-core/helper-plugin/hooks/use-filter.mdx",tags:[{label:"hooks",permalink:"/tags/hooks"},{label:"helper-plugin",permalink:"/tags/helper-plugin"},{label:"i18n",permalink:"/tags/i-18-n"}],version:"current",frontMatter:{title:"useFilter",description:"API reference for the useFilter hook in Strapi",tags:["hooks","helper-plugin","i18n"]},sidebar:"docs",previous:{title:"useFetchClient",permalink:"/docs/core/helper-plugin/hooks/use-fetch-client"},next:{title:"useFocusInputField",permalink:"/docs/core/helper-plugin/hooks/use-focus-input-field"}},a={},c=[{value:"Usage",id:"usage",level:2},{value:"Typescript",id:"typescript",level:2}];function u(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Provides localized string search functionality that is useful for filtering or matching items in a list. Options can be\nprovided to adjust the sensitivity to case, diacritics, and other parameters."}),"\n",(0,r.jsxs)(n.p,{children:["Borrowed from ",(0,r.jsx)(n.a,{href:"https://github.com/adobe/react-spectrum/blob/main/packages/%40react-aria/i18n/src/useFilter.ts",children:(0,r.jsx)(n.code,{children:"react-aria"})}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import { useIntl } from 'react-intl';\nimport { useFilter } from '@strapi/helper-plugin';\n\nconst MyComponent = () => {\n  const { locale } = useIntl();\n\n  const fruits = ['orange', 'apple', 'kiwi', 'banana'];\n  const searchValue = 'an';\n\n  const { contains } = useFilter(locale, { sensitivity: 'base' });\n\n  /**\n   * This would render the list of fruits in the following order:\n   * orange\n   * banana\n   */\n  return (\n    <div>\n      {fruits\n        .filter((fruit) => includes(fruit, searchValue))\n        .map((fruit) => (\n          <h2 key={fruit}>{fruit}</h2>\n        ))}\n    </div>\n  );\n};\n"})}),"\n",(0,r.jsx)(n.h2,{id:"typescript",children:"Typescript"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface Filter {\n  /** Returns whether a string starts with a given substring. */\n  startsWith(string: string, substring: string): boolean;\n  /** Returns whether a string ends with a given substring. */\n  endsWith(string: string, substring: string): boolean;\n  /** Returns whether a string contains a given substring. */\n  includes(string: string, substring: string): boolean;\n}\n\nfunction useFilter(locale: string, options?: Intl.CollatorOptions): Filter;\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var r=t(6540);const s={},i=r.createContext(s);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);