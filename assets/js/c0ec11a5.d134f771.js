"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5290],{1186:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var s=t(4848),i=t(8453);const r={title:"Event Hub",description:"The event hub is a central system that processes a variety of events in a Strapi application",tags:["core","plugins"]},a="Event Hub",o={id:"docs/core/strapi/event-hub",title:"Event Hub",description:"The event hub is a central system that processes a variety of events in a Strapi application",source:"@site/docs/docs/01-core/strapi/event-hub.md",sourceDirName:"docs/01-core/strapi",slug:"/docs/core/strapi/event-hub",permalink:"/docs/core/strapi/event-hub",draft:!1,unlisted:!1,editUrl:"https://github.com/strapi/strapi/tree/main/docs/docs/docs/01-core/strapi/event-hub.md",tags:[{label:"core",permalink:"/tags/core"},{label:"plugins",permalink:"/tags/plugins"}],version:"current",frontMatter:{title:"Event Hub",description:"The event hub is a central system that processes a variety of events in a Strapi application",tags:["core","plugins"]},sidebar:"docs",previous:{title:"plugin:watch:link",permalink:"/docs/core/strapi/commands/plugin/link-watch"},next:{title:"Introduction",permalink:"/upload"}},c={},l=[{value:"Summary",id:"summary",level:2},{value:"Detailed design",id:"detailed-design",level:2},{value:"Emitting events",id:"emitting-events",level:3},{value:"<code>emit</code>",id:"emit",level:4},{value:"Managing subscribers",id:"managing-subscribers",level:3},{value:"<code>subscribe</code>",id:"subscribe",level:4},{value:"<code>unsubscribe</code>",id:"unsubscribe",level:4},{value:"Listening to a single event",id:"listening-to-a-single-event",level:3},{value:"<code>on</code>",id:"on",level:4},{value:"<code>off</code>",id:"off",level:4},{value:"<code>once</code>",id:"once",level:4},{value:"Tradeoffs",id:"tradeoffs",level:2},{value:"Alternatives",id:"alternatives",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"event-hub",children:"Event Hub"}),"\n",(0,s.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,s.jsx)(n.p,{children:"The event hub is a central system that processes a variety of events in a Strapi application. These events can be emitted from a variety of sources to trigger associated subscriber functions."}),"\n",(0,s.jsx)("img",{src:"/img/utils/event-hub-diagram.png",alt:"A diagram showing how the event hub processes events with multiple sources with multiple subscribers"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"above: A diagram showing how the event hub processes events from different sources with multiple subscribers"})}),"\n",(0,s.jsx)(n.p,{children:"Events are mainly used in Strapi to power the webhooks and audit logs features. However, plugin developers can also access the event-hub using the plugin API. This means plugins can listen to events emitted by Strapi and emit new events to the event hub."}),"\n",(0,s.jsx)(n.h2,{id:"detailed-design",children:"Detailed design"}),"\n",(0,s.jsx)(n.p,{children:"The event hub is a store of subscriber functions. When an event is emitted to the hub, each subscriber function in the store will be called with the event's name and a variable number of arguments."}),"\n",(0,s.jsxs)(n.p,{children:["This design was inspired by the way Strapi handles ",(0,s.jsx)(n.a,{href:"https://docs.strapi.io/developer-docs/latest/development/backend-customization/models.html#lifecycle-hooks",children:"lifecycle hooks"}),". It was chosen over the ",(0,s.jsx)(n.a,{href:"https://nodejs.org/api/events.html#class-eventemitter",children:"Node.js event emitter"})," because it provides the ability to have a single subscriber function per feature, and does not cause ",(0,s.jsx)(n.a,{href:"https://stackoverflow.com/questions/9768444/possible-eventemitter-memory-leak-detected",children:"memory leak concerns"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"emitting-events",children:"Emitting events"}),"\n",(0,s.jsx)(n.h4,{id:"emit",children:(0,s.jsx)(n.code,{children:"emit"})}),"\n",(0,s.jsx)(n.p,{children:"Dispatches a new event into the hub. It returns a promise that resolves when all the subscribers have run."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// Types\ntype Emit = (name: string, ...args: any[]) => Promise<void>;\n\n// Usage\nstrapi.eventHub.emit('some.event', { meta: 'data' });\n"})}),"\n",(0,s.jsx)(n.h3,{id:"managing-subscribers",children:"Managing subscribers"}),"\n",(0,s.jsx)(n.h4,{id:"subscribe",children:(0,s.jsx)(n.code,{children:"subscribe"})}),"\n",(0,s.jsx)(n.p,{children:"Adds a subscriber function that will be called for each event emitted to the hub. It returns a function that can be called to remove the subscriber."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// Types\ntype Subscriber = (name: string, ...args: Object) => void | Promise<void>;\ntype UnsubscribeCallback = () => void;\ntype Subscribe = (subscriber: Subscriber) => UnsubscribeCallback;\n\n// Add a subscriber\nconst unsubcribe = strapi.eventHub.subscribe((name: string, ...args: any[]) => {\n  // Write your subscriber logic here\n});\n\n// Remove the subscriber using the returned function\nunsubscribe();\n"})}),"\n",(0,s.jsx)(n.h4,{id:"unsubscribe",children:(0,s.jsx)(n.code,{children:"unsubscribe"})}),"\n",(0,s.jsx)(n.p,{children:"Removes a subscriber function. You need to give it the reference of the subscriber as an argument."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// Types\ntype Subscriber = (name: string, ...args: any[]) => void | Promise<void>;\ntype Unsubscribe = (subscriber: Subscriber) => void;\n\n// After a subscriber has been added\nconst subscriber: Subscriber = (name, ...args) => {};\nstrapi.eventHub.subscribe(subscriber);\n\n// Use its reference to remove it\nstrapi.eventHub.unsubcribe(subscriber);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"listening-to-a-single-event",children:"Listening to a single event"}),"\n",(0,s.jsxs)(n.p,{children:["If you only need to run a function for one specific event, then creating a subscriber function may be overkill. For this reason, the event hub provides the ",(0,s.jsx)(n.code,{children:"on"}),",",(0,s.jsx)(n.code,{children:"off"})," and ",(0,s.jsx)(n.code,{children:"once"})," methods, inspired by the ",(0,s.jsx)(n.a,{href:"https://nodejs.org/api/events.html#class-eventemitter",children:"Node.js event emitter"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"on",children:(0,s.jsx)(n.code,{children:"on"})}),"\n",(0,s.jsxs)(n.p,{children:["Registers a listener function that is called every time a ",(0,s.jsx)(n.em,{children:"specific"})," event is emitted. It returns a function that can be called to remove the listener."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// Types\ntype Listener = (args: any[]) => void | Promise<void>;\ntype RemoveListenerCallback = () => void;\ntype On = (eventName: string, listener: Listener) => RemoveListenerCallback;\n\n// Add a listener\nconst removeListener = strapi.eventHub.on('some.event', () => {\n  // Write your listener logic here\n});\n\n// Remove the listener using the returned function\nremoveListener();\n"})}),"\n",(0,s.jsx)(n.h4,{id:"off",children:(0,s.jsx)(n.code,{children:"off"})}),"\n",(0,s.jsx)(n.p,{children:"Removes a listener function. You need to give it the name of the event it's listening to, as well as the reference of the listener as an argument."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// Types\ntype Listener = (args: any[]) => void | Promise<void>;\ntype Off = (listener: Listener) => void;\n\n// After a listener has been added\nconst listener: Listener = (...args) => {};\nstrapi.eventHub.on('some.event', listener);\n\n// Use its reference to remove it\nstrapi.eventHub.off('some.event', listener);\n"})}),"\n",(0,s.jsx)(n.h4,{id:"once",children:(0,s.jsx)(n.code,{children:"once"})}),"\n",(0,s.jsx)(n.p,{children:"Registers a listener function that will only be called the first time an event is emitted. Once the event has been emitted, the listener will be removed automatically. It also returns a function that can be used to remove the listener before it was called."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// Types\ntype Listener = (args: any[]) => void | Promise<void>;\ntype RemoveListenerCallback = () => void;\ntype Once = (eventName: string, listener: Listener) => RemoveListenerCallback;\n\n// Add a single-use listener\nconst removeListener = strapi.eventHub.once('some.event', () => {\n  // Write your listener logic here\n});\n\n// Remove the single-use listener using the returned function\nremoveListener();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"tradeoffs",children:"Tradeoffs"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Potential breaking changes: a change to an event's name or payload may affect other features or plugins listening to the same event. Backwards compatibility is a concern when managing these events."}),"\n",(0,s.jsx)(n.li,{children:"Performance: Strapi emits a lot of events, so you need to make sure your subscriber functions aren't too expensive to run."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"alternatives",children:"Alternatives"}),"\n",(0,s.jsx)(n.p,{children:"You may not need the event hub:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["If you want to listen to database events on a specific content type, use ",(0,s.jsx)(n.a,{href:"https://docs.strapi.io/developer-docs/latest/development/backend-customization/models.html#lifecycle-hooks",children:"lifecycle hooks"})]}),"\n",(0,s.jsxs)(n.li,{children:["If you want to listen to database events on all content types, use a ",(0,s.jsx)(n.a,{href:"https://docs.strapi.io/developer-docs/latest/development/backend-customization/models.html#declarative-and-programmatic-usage",children:"generic database lifecycle hook"})]}),"\n",(0,s.jsxs)(n.li,{children:["If you want to emit an event, but don't want it to be exposed to other features or plugins, create a ",(0,s.jsx)(n.a,{href:"https://docs.strapi.io/developer-docs/latest/development/backend-customization/services.html#services",children:"service"})," and call it directly instead"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var s=t(6540);const i={},r=s.createContext(i);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);